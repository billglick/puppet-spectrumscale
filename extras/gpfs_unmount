#!/bin/bash

#DEBUG=1
GPFSBIN=/usr/lpp/mmfs/bin
GPFSCONF=/var/mmfs/etc


function die() {
    echo "ERROR: $*" 1>&2
    exit 99
}


function debug() {
    [[ $DEBUG -eq 1 ]] || return 0
    echo "DEBUG: $*"
}


function is_gpfs_installed() {
    [[ $DEBUG -eq 1 ]] && set -x
    [[ -d $GPFSBIN ]]
}


function is_gpfs_running() {
    [[ $DEBUG -eq 1 ]] && set -x
    $GPFSBIN/mmgetstate | grep $HOSTNAME | grep -q active
}


function is_gpfs_stopped() {
    [[ $DEBUG -eq 1 ]] && set -x
    $GPFSBIN/mmgetstate | grep $HOSTNAME | grep -q down
}


function get_gpfs_mounts() {
    [[ $DEBUG -eq 1 ]] && set -x
    mount -t gpfs | awk '{print $3}'
}


function get_bindmounts() {
    [[ $DEBUG -eq 1 ]] && set -x
    awk '
        NR==FNR { gpfs_mounts[$1]++; next }
        /bind/ { if ( gpfs_mounts[$2] > 0 ) { print $2 } }
    ' <( get_gpfs_mounts ) /etc/fstab
}


function gpfs_off() {
    # Attempt to turn off / shutdown gpfs
    # This will unmount all native gpfs mounts (but not bindmounts)
    # Return 0 on success, non-zero otherwise
    [[ $DEBUG -eq 1 ]] && set -x
    $GPFSBIN/mmshutdown
    sleep 10
    is_gpfs_stopped
}


function ls_procs() {
    # List all unique process IDs that are accessing files on any gpfs mountpoint
    [[ $DEBUG -eq 1 ]] && set -x
    get_gpfs_mounts | xargs -r -n1 lsof -t | sort -ur
}


function kill_procs() {
    # Attempt to kill processes accessing files on gpfs
    [[ $DEBUG -eq 1 ]] && set -x

    #try HUP first
    ls_procs | xargs -r kill
    [[ $( ls_procs | wc -l ) -gt 0 ]] && sleep 5

    #if anything left, send KILL
    ls_procs | xargs -r kill -9
    [[ $( ls_procs | wc -l ) -gt 0 ]] && sleep 5

    #return 0 if no procs remain, non-zero otherwise
    return $( ls_procs | wc -l )
}


[[ $DEBUG -eq 1 ]] && set -x

# Exit quickly if no GPFS
is_gpfs_installed || {
    echo "GPFS not found. Exiting."
    exit 0
}


if is_gpfs_running; then

    # Kill any processes still using files in GPFS
#   ls_procs
    kill_procs || die "Filesystem still busy. Attempt to kill processes was unsuccessful"
#   echo kill is done
#   echo ls_procs...
#   ls_procs
#   exit 1

    # Attempt to unmount all bind mounts
    # Sometimes, multiple bind mounts are present, keep looking until mount count == 1
    # If mount count doesn't change after 2 attempts, exit with an error
    mounts_curr=( $( get_gpfs_mounts ) )
    debug "GPFS MOUNTS"
    debug "${mounts_curr[@]}"
    repeat_attempts=0
    while [[ ${#mounts_curr[*]} -gt 1 ]] ; do
        debug "Attempt to unmount '${#mounts_curr[*]}' bind mounts"
        get_bindmounts | xargs -r /bin/umount
        prev_mcount=${#mounts_curr[*]}
        mounts_curr=( $( get_gpfs_mounts ) )
        debug "Current gpfs mounts: '${mounts_curr[@]}'"
        debug "Current gpfs mount count: '${#mounts_curr[*]}'"
        if [[ ${#mounts_curr[*]} -lt $prev_mcount ]] ; then
            debug "resetting attempts counter"
            repeat_attempts=0
        else
            debug "mount count didn't decrease, trying again"
            let "repeat_attempts+=1"
        fi
        [[ $repeat_attempts -ge 2 ]] && die "Unable to unmount some bind mounts"
    done

    debug "SHUTDOWN GPFS"
    gpfs_off || die "GPFS shutdown was unsuccessful"

fi
